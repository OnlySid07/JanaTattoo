---
// Todos los tatuajes disponibles
const allTattoos = [
  {
    id: 1,
    title: "‚ú®ü´∂üèºü´∞üèº",
    artist: "SoyChivi",
    image: "/images/black.webp",
    category: "Black"
  },
  {
    id: 2,
    title: "Dog",
    artist: "Jana Salas",
    image: "/images/retrato1.webp",
    category: "Retrato"
  },
  {
    id: 3,
    title: "Mulan-Mushu",
    artist: "Jana Salas",
    image: "/images/anime1.webp",
    category: "Dibujo"
  },
  {
    id: 4,
    title: "Minis no tan minis :)",
    artist: "SoyChivi",
    image: "/images/minis1.jpg",
    category: "Minis"
  },
  {
    id: 5,
    title: "ü™Ω",
    artist: "Jana Salas",
    image: "/images/minis2.jpg",
    category: "Minis"
  },
  {
    id: 6,
    title: "‚ö°",
    artist: "Jana Salas",
    image: "/images/minis3.jpg",
    category: "Minis"
  },
  // Tatuajes adicionales que se mostrar√°n al hacer clic en "Ver m√°s"
  {
    id: 7,
    title: "Mascotas",
    artist: "Jana Salas",
    image: "/images/retrato3.jpg",
    category: "Retrato"
  },
  {
    id: 8,
    title: "Un poco Minimalista",
    artist: "Jana Salas",
    image: "/images/black1.jpg",
    category: "Black"
  },
  {
    id: 9,
    title: "Demon",
    artist: "Jana Salas",
    image: "/images/black2.jpg",
    category: "Black"
  },
  {
    id: 10,
    title: "Ya pero que anime?",
    artist: "Jana Salas",
    image: "/images/anime2.jpg",
    category: "Dibujo"
  },
  {
    id: 11,
    title: "Dragon",
    artist: "Jana Salas",
    image: "/images/anime3.webp",
    category: "Dibujo"
  },
  {
    id: 12,
    title: "The Lovers",
    artist: "SoyChivi",
    image: "/images/black3.jpg",
    category: "Black"
  },
  {
    id: 13,
    title: "Love for dad",
    artist: "Jana Salas",
    image: "/images/retrato.jpg",
    category: "Retrato"
  },
  {
    id: 14,
    title: "Tatuajes, dibujitos y fotos üíï",
    artist: "SoyChivi",
    image: "/images/nosotras.jpg",
    category: "Nosotras"
  }
  ,
  {
    id: 15,
    title: "Mam√° de Cesar , 3 pugs + 2 üê∂ üñ§",
    artist: "Jana Salas",
    image: "/images/nosotras1.jpg",
    category: "Nosotras"
  }
];

// Inicialmente solo mostramos los primeros 6
const initialTattoos = allTattoos.slice(0, 6);

// Extraer categor√≠as √∫nicas para los botones de filtro
const categories = ["All Work", ...new Set(allTattoos.map(tattoo => tattoo.category))];
---

<section id="gallery" class="py-20 bg-zinc-950">
  <div class="container mx-auto px-4">
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-bold mb-4">Nuestro Trabajo</h2>
      <p class="text-zinc-400 max-w-2xl mx-auto">
        Una colecci√≥n seleccionada de nuestros dise√±os de tatuajes minimalistas, que muestran l√≠neas limpias, detalles sutiles y elegancia atemporal.
      </p>
            
      <!-- MAPA DEL DOLOR - Instrucciones: Coloca tu imagen del mapa del dolor en la carpeta "public" -->
      <div class="mt-8 mb-12 max-w-2xl mx-auto">
        <h3 class="text-xl font-medium mb-4">Mapa del Dolor</h3>
        <img 
          src="/images/body.webp" 
          alt="Mapa del dolor para tatuajes" 
          class="w-full rounded-lg shadow-lg"
        />
        <p class="text-zinc-500 text-sm mt-2">Gu√≠a de intensidad del dolor seg√∫n la zona del cuerpo</p>
      </div>
    </div>
    
    <div class="flex overflow-x-auto pb-4 mb-8 gap-4 hide-scrollbar">
      {categories.map((category, index) => (
        <button 
          class={`category-btn whitespace-nowrap px-6 py-2 border border-zinc-800 rounded-full text-sm ${index === 0 ? 'active' : ''}`}
          data-category={category === "All Work" ? "all" : category}
        >
          {category}
        </button>
      ))}
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="gallery-grid">
      {allTattoos.map((tattoo, index) => (
        <div 
          class={`group relative overflow-hidden tattoo-item ${index >= 6 ? 'hidden' : ''}`} 
          data-category={tattoo.category}
        >
          <img 
            src={tattoo.image || "/placeholder.svg"} 
            alt={tattoo.title} 
            class="w-full aspect-[3/4] object-cover transition-transform duration-500 group-hover:scale-105"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex flex-col justify-end p-6">
            <h3 class="text-xl font-medium">{tattoo.title}</h3>
            <p class="text-zinc-400">Por {tattoo.artist}</p>
            <span class="inline-block mt-2 text-xs uppercase tracking-wider px-3 py-1 bg-white/10 backdrop-blur-sm rounded-full">
              {tattoo.category}
            </span>
          </div>
        </div>
      ))}
    </div>
    
    <!-- <div class="text-center mt-12">
      <button id="view-more-btn" class="inline-block px-8 py-3 border border-zinc-700 text-white hover:bg-white/10 transition-colors">
        Ver M√°s
      </button>
    </div> -->
  </div>
</section>

<script>
  // Esperar a que el DOM est√© completamente cargado
  document.addEventListener('DOMContentLoaded', () => {
    // Elementos del DOM
    const categoryButtons = document.querySelectorAll('.category-btn');
    const tattooItems = document.querySelectorAll('.tattoo-item');
    const viewMoreBtn = document.getElementById('view-more-btn');
    
    let showingAll = false;
    let currentCategory = 'all';
    
    // Funci√≥n para filtrar por categor√≠a
    function filterByCategory(category: string) {
      currentCategory = category;
      
      tattooItems.forEach((item, index) => {
        const itemCategory = item.getAttribute('data-category');
        const matchesCategory = category === 'all' || itemCategory === category;
        
        // Si estamos mostrando todos los elementos o si est√° dentro de los primeros 6
        const shouldShow = matchesCategory && (showingAll || index < 15);
        
        (item as HTMLElement).style.display = shouldShow ? 'block' : 'none';
      });
      
      // Actualizar el bot√≥n activo
      categoryButtons.forEach(btn => {
        if (btn.getAttribute('data-category') === category) {
          btn.classList.add('active');
        } else {
          btn.classList.remove('active');
        }
      });
    }
    
    // Funci√≥n para mostrar m√°s elementos
    function viewMore() {
      showingAll = true;
      
      // Mostrar todos los elementos de la categor√≠a actual
      tattooItems.forEach(item => {
        const itemCategory = item.getAttribute('data-category');
        const matchesCategory = currentCategory === 'all' || itemCategory === currentCategory;
        
        if (matchesCategory) {
          (item as HTMLElement).style.display = 'block';
        }
      });
      
      // Cambiar el texto del bot√≥n y ocultar si es necesario
      if (viewMoreBtn) {
        viewMoreBtn.textContent = 'No hay m√°s elementos';
        (viewMoreBtn as HTMLButtonElement).disabled = true;
        viewMoreBtn.classList.add('opacity-50');
      }
    }
    
    // Event listeners
    categoryButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category');
        if (category) {
          filterByCategory(category);
        }
        
        // Resetear el estado de "Ver m√°s" cuando se cambia de categor√≠a
        showingAll = false;
        if (viewMoreBtn) {
          viewMoreBtn.textContent = 'Ver M√°s';
          (viewMoreBtn as HTMLButtonElement).disabled = false;
          viewMoreBtn.classList.remove('opacity-50');
        }
      });
    });
    
    // Event listener para el bot√≥n "Ver m√°s"
    if (viewMoreBtn) {
      viewMoreBtn.addEventListener('click', viewMore);
    }
    
    // Inicializar con la categor√≠a "All"
    filterByCategory('all');
  });
</script>

<style>
  /* Additional Tailwind classes */
  .py-20 { padding-top: 5rem; padding-bottom: 5rem; }
  .bg-zinc-950 { background-color: #09090b; }
  .text-3xl { font-size: 1.875rem; }
  .md\:text-4xl { @media (min-width: 768px) { font-size: 2.25rem; } }
  .mb-4 { margin-bottom: 1rem; }
  .mb-8 { margin-bottom: 2rem; }
  .mb-12 { margin-bottom: 3rem; }
  .mb-16 { margin-bottom: 4rem; }
  .mt-8 { margin-top: 2rem; }
  .pb-4 { padding-bottom: 1rem; }
  .gap-4 > * + * { margin-left: 1rem; }
  .gap-6 > * + * { margin-left: 1.5rem; }
  .grid { display: grid; }
  .grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
  .md\:grid-cols-2 { @media (min-width: 768px) { grid-template-columns: repeat(2, minmax(0, 1fr)); } }
  .lg\:grid-cols-3 { @media (min-width: 1024px) { grid-template-columns: repeat(3, minmax(0, 1fr)); } }
  .whitespace-nowrap { white-space: nowrap; }
  .px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
  .rounded-full { border-radius: 9999px; }
  .rounded-lg { border-radius: 0.5rem; }
  .aspect-\[3\/4\] { aspect-ratio: 3/4; }
  .overflow-hidden { overflow: hidden; }
  .overflow-x-auto { overflow-x: auto; }
  .transition-transform { transition-property: transform; }
  .transition-opacity { transition-property: opacity; }
  .duration-300 { transition-duration: 300ms; }
  .duration-500 { transition-duration: 500ms; }
  .group-hover\:scale-105:hover { transform: scale(1.05); }
  .opacity-0 { opacity: 0; }
  .opacity-50 { opacity: 0.5; }
  .group-hover\:opacity-100:hover { opacity: 1; }
  .from-black\/80 { --tw-gradient-from: rgba(0, 0, 0, 0.8); }
  .via-black\/30 { --tw-gradient-via: rgba(0, 0, 0, 0.3); }
  .to-transparent { --tw-gradient-to: transparent; }
  .text-xl { font-size: 1.25rem; }
  .text-xs { font-size: 0.75rem; }
  .text-sm { font-size: 0.875rem; }
  .mt-2 { margin-top: 0.5rem; }
  .mt-12 { margin-top: 3rem; }
  .inline-block { display: inline-block; }
  .backdrop-blur-sm { backdrop-filter: blur(4px); }
  .hidden { display: none; }
  .shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
  
  .hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }
  
  .category-btn {
    transition: all 0.3s ease;
  }
  
  .category-btn.active {
    background-color: white;
    color: black;
    border-color: white;
  }
</style>

